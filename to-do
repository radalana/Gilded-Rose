/*

Ordinary items
    * Test quality value
        1. before Sell in day: sellIn >= 0
            update_quality(items.push(new Item('+5 Dexterity Vest', 0, 1))) -> items[0].quality = 0
        2. after Sell in day: sellIn < 0
            update_quality(items.push(new Item('+5 Dexterity Vest', 0, 2))) -> items[0].quality = 0
        3. min 0 quality value
            update_quality(items.push(new Item('+5 Dexterity Vest', -1, 0))) -> items[0].quality = 0
    * Test Sell In Value:
            update_quality(items.push(new Item('+5 Dexterity Vest', 0, 1))) -> items[0].sellIn = -1
"Aged brie": sellIn day doesn't affect
    * Test quality value 
        1. before Sell In day: sellIn >= 0
            update_quality(items.push(new Item('Aged Brie', 5, 49))) -> items[0].quality = 50
        2. after Sell In day: sellIn  < 0
            update_quality(items.push(new Item('Aged Brie', -5, 49))) -> items[0].quality = 50
        3. max value:
            update_quality(items.push(new Item('Aged Brie', 5, 50))) -> items[0].quality = 50 
"Backstages passes"
    * Test quality value
        1. before Sell In day: sellIn >= 0
            
            1.1. more than 10 days: sellIn > 10
                update_quality(items.push(new Item('Backstage passes', 11, 49))) -> items[0].quality = 50
                max boundary: update_quality(items.push(new Item('Backstage passes', 11, 50))) -> items[0].quality = 50
            1.2. sellIn between [10, 5)
                update_quality(items.push(new Item('Backstage passes', 10, 48))) -> items[0].quality = 50
                max boundary: update_quality(items.push(new Item('Backstage passes', 10, 49))) -> items[0].quality = 50
            1.3. sellIn between [5, 0]
                update_quality(items.push(new Item('Backstage passes', 0, 47))) -> items[0].quality = 50
                max boundary: update_quality(items.push(new Item('Backstage passes', 0, 48))) -> items[0].quality = 50
        2. after Sell in day: sellIn  < 0
                update_quality(items.push(new Item('Backstage passes', -1, 50)))-> items[0].quality = 0
"Sulfuras":
    * Test quality value
        update_quality(items.push(new Item('Backstage passes', 0, 80))) -> items[0].quality = 80
    * Test Sell In value
        update_quality(items.push(new Item('Backstage passes', 0, 80))) -> items[0].sellIn = 0

